@model Mvc.ViewModels.ForgotPasswordViewModel
@{
    Layout = "~/Views/Shared/_LayoutEmpty.cshtml";
    ViewData["Title"] = "忘記密碼";
}

<div class="auth-content">
    <div class="card">
        <div class="card-body text-center">
            <div class="mb-4">
                <img class="brand" src="@Url.Content("~/images/bootstraper-logo.png")" alt="bootstraper logo">
            </div>
            <h4 class="mb-4 text-muted">忘記密碼</h4>
            <p class="text-muted text-start">請輸入您的Email，將會寄送認證信件給您</p>
            <form id="frmForm"
                  asp-controller="Account"
                  asp-action="ForgotPassword"
                  method="post" autocomplete="off" novalidate>
                @Html.AntiForgeryToken()

                <div class="form-group mb-3 text-start">
                    <label asp-for="Email" class="control-label"></label>
                    <input asp-for="Email" class="form-control" placeholder="輸入 Email">
                </div>

                <div class="row mb-4">
                    <div class="col-6">
                        <button type="submit" class="btn btn-primary w-100">
                            寄送認證信件
                        </button>
                    </div>
                    <div class="col-6">
                        <a class="btn btn-secondary w-100" asp-action="Login">返回登入</a>
                    </div>
                </div>
            </form>
            <p class="mb-0 text-muted">還沒有帳號？ <a asp-action="register">註冊</a></p>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        $("#frmForm").validate({
            errorClass: "input-validation-error",
            errorPlacement: function() {},
            rules: {
                Email: {
                    required: true,
                    email: true,
                }
            },
            messages: {
                Email: {
                    required: $("#Email").data("val-required"),
                    email: $("#Email").data("val-email"),
                }
            },
            invalidHandler: function(event, validator) {
                toastr.clear();
                for(var i = 0; i < validator.errorList.length; i++) {
                    toastr.error(validator.errorList[i].message);
                }
            },
            submitHandler: function(form) {
                $("#loadingOverlay").removeClass("d-none");
                form.submit();
            }
        });
    </script>
}